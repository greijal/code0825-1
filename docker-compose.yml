services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: kc_user
      POSTGRES_PASSWORD: kc_pass
    volumes:
      - kc-pg:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U kc_user -d keycloak" ]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  keycloak:
    image: quay.io/keycloak/keycloak:26.0
    depends_on:
      postgres:
        condition: service_healthy
    command:
      - start
      - --hostname=api.greijal.app
      - --https-port=8443
      - --https-certificate-file=/etc/keycloak/tls/keycloak.crt
      - --https-certificate-key-file=/etc/keycloak/tls/keycloak.key
      - --http-enabled=false
      - --http-relative-path=/kc
      - --hostname-strict=true
      - --proxy-headers=xforwarded
      - --import-realm
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: kc_user
      KC_DB_PASSWORD: kc_pass
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    volumes:
      - ./keycloak/realms:/opt/keycloak/data/import:ro
      - ./internal-ca/keycloak:/etc/keycloak/tls:ro
    expose:
      - "8443"
    restart: unless-stopped

  api_gateway:
    build: .
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "wget --https-only --ca-certificate=/etc/ssl/internal/internal-ca.crt -qO- https://localhost:8443/api/actuator/health | grep -q '\"status\":\"UP\"'" ]
      interval: 30s
      timeout: 5s
      retries: 10
    expose:
      - "8443"
    volumes:
      - ./internal-ca/api-gateway:/etc/tls:ro
      - ./internal-ca/internal-ca.crt:/etc/ssl/internal/internal-ca.crt:ro
    restart: unless-stopped

  nginx:
    image: nginx:1.27-alpine
    depends_on:
      - keycloak
      - api_gateway
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certs/le:/etc/nginx/tls:ro
      - ./internal-ca/internal-ca.crt:/etc/nginx/upstream-ca/internal-ca.crt:ro
      - ./nginx/gateway.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped

volumes:
  kc-pg: