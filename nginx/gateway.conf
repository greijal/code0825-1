# nginx/gateway.conf
user  nginx;
worker_processes auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections 1024;
}

http {
  # Logs
  access_log /var/log/nginx/access.log;

  # WebSocket / Upgrade
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ""      close;
  }

  # Proxy defaults
  proxy_http_version 1.1;
  proxy_set_header Host              $host;
  proxy_set_header X-Real-IP         $remote_addr;
  proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto https;
  proxy_set_header Connection        $connection_upgrade;
  proxy_set_header Upgrade           $http_upgrade;

  # Verificação de TLS com upstreams usando CA interna (montada via docker-compose)
  proxy_ssl_verify on;
  proxy_ssl_trusted_certificate /etc/nginx/upstream-ca/internal-ca.crt;
  proxy_ssl_server_name on;

  # --- HTTP -> HTTPS redirect
  server {
    listen 80;
    server_name api.greijal.app;
    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl http2;
    server_name api.greijal.app;

    # Cert público do Nginx (montado em /etc/nginx/tls pelo docker-compose)
    ssl_certificate     /etc/nginx/tls/fullchain.pem;
    ssl_certificate_key /etc/nginx/tls/privkey.pem;
    ssl_protocols       TLSv1.2 TLSv1.3;

    # --- Rotas
    location /kc/ {
      proxy_ssl_name keycloak;
      proxy_pass https://keycloak:8443/kc/;
    }

    location /api/ {
      proxy_ssl_name api_gateway;
      proxy_pass https://api_gateway:8443/api/;
    }
  }
}